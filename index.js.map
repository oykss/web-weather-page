{"version":3,"file":"index.js","sources":["../src/js/change-fill.js","../src/js/render-functions.js","../src/js/weather-api.js","../src/js/local.js","../src/js/chande-units.js","../src/main.js"],"sourcesContent":["const fill = [\n  'rgba(255, 0, 0, 1)',\n  'rgba(255, 127, 0, 1)',\n  'rgba(255, 255, 0, 1)',\n  'rgba(0, 255, 0, 1)',\n  'rgba(0, 0, 255, 1)',\n  'rgba(75, 0, 130, 1)',\n  'rgba(148, 0, 211, 1)',\n];\n\nlet tempPulsation = -1;\n\nexport function pulsation() {\n  if (tempPulsation === 6) {\n    tempPulsation = -1;\n  }\n\n  const element = document.querySelector('.icon-type');\n  element.style.fill = `${fill[tempPulsation]}`;\n  tempPulsation++;\n}\n\nlet tempChange = 0;\n\nexport const change = () => {\n  if (tempChange === 6) {\n    tempChange = -1;\n  }\n  tempChange++;\n  return fill[tempChange];\n};\n","import { change } from './change-fill';\n\nconst basePath = import.meta.env.BASE_URL || '';\n\nexport const renderWeatherNow = (allParam, wrap) => {\n  const { main, weather, coord, wind, name } = allParam;\n\n  wrap.innerHTML = `\n    <div class=\"place-wrap\">\n      <p class=\"place\">${name} lon:${coord.lon} lat:${coord.lat}</p>\n    </div>\n    <div class=\"info\">\n      <svg class=\"icon-type\">\n        <use href=\"${basePath}icons.svg#${weather[0].icon} \"></use>\n      </svg>\n      \n      <ul class=\"param\">\n      <li><h1>${weather[0].description}</h1></li>\n      \n      <li>\n        <p class=\"num\">Humidity: ${main.humidity}</p>\n      </li>\n\n      <li>\n        <p class=\"num\">Wind-speed: ${wind.speed}</p>\n        <div class=\"compass\">\n          <svg class=\"icon-compass\">\n            <use href=\"${basePath}icons.svg#icon-compass\"></use>\n          </svg>\n        </div>\n        </li>\n        <li>\n          <p class=\"temp-subtitle\">Temperature</p>\n          <ul class=\"temperature\">\n            <li>\n              <p class=\"num\">now: <span data-temp>${main.temp}</span></p>\n            </li>\n            <li>\n              <p class=\"num\">min: <span data-temp>${main.temp_min}</span></p>\n            </li>\n            <li>\n              <p class=\"num\">max: <span data-temp>${main.temp_max}</span></p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  `;\n\n  document.querySelector('.icon-compass').style.transform = `rotate(${wind.deg - 45}deg)`;\n};\n\nexport const renderWeatherSomeDay = (allParam, wrap) => {\n  wrap.innerHTML = '';\n  allParam.forEach(oneDay => {\n    const { weather, main, dt_txt } = oneDay;\n\n    wrap.innerHTML += `\n    <div class=\"info swiper-slide\">\n      <svg class=\"icon-type\"  style=\"fill: ${change()}\">\n        <use href=\"${basePath}icons.svg#${weather[0].icon} \"></use>\n      </svg>\n        <ul class=\"param\">\n          <li  class=\"description\">\n            <p class=\"num time\">${dt_txt.slice(5, 16)}</p>\n            <p class=\"num\">${weather[0].description}</p>\n          </li>\n          \n          <li>\n            <p class=\"temp-subtitle\">Temperature</p>\n            <ul class=\"temperature\">\n              <li>\n                <p class=\"num\">min: <span data-temp>${main.temp_min}</span></p>\n              </li>\n              <li>\n                <p class=\"num\">max: <span data-temp>${main.temp_max}</span></p>\n              </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n    `;\n  });\n};\n","import axios from 'axios';\nimport { renderWeatherNow } from './render-functions';\n\nconst API_KEY = import.meta.env.VITE_API_KEY;\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n// type\n// - weather\n// - forecast\n\nexport const getWeatherStart = async (type, lon, lat, units = 'metric') => {\n  const searchParams = new URLSearchParams({\n    appid: API_KEY,\n    lang: 'en',\n    lon,\n    lat,\n    units,\n  });\n  try {\n    const response = await axios.get(`${BASE_URL}/${type}?${searchParams}`);\n    return response.data;\n  } catch (error) {}\n};\n\nexport const getWeather = async (type, value, units = 'metric') => {\n  const searchParams = new URLSearchParams({\n    appid: API_KEY,\n    q: value,\n    lang: 'en',\n    units,\n  });\n  try {\n    const response = await axios.get(`${BASE_URL}/${type}?${searchParams}`);\n    return response.data;\n  } catch (error) {}\n};\n","export function getLocal() {\n  return new Promise(resolve => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          resolve([longitude, latitude]);\n        },\n        error => {\n          resolve([33.35, 47.9167]);\n        }\n      );\n    } else {\n      resolve([33.35, 47.9167]);\n    }\n  });\n}\n","import { getLocal } from './local';\nimport { getWeather, getWeatherStart } from './weather-api';\n\nexport function changeUnits(inputValue, valueUnits) {\n  const allDataTemp = document.querySelectorAll('[data-temp]');\n\n  if (inputValue) {\n    getWeather('weather', inputValue, valueUnits).then(data => {\n      const { temp, temp_max, temp_min } = data.main;\n      allDataTemp[0].textContent = temp;\n      allDataTemp[1].textContent = temp_max;\n      allDataTemp[2].textContent = temp_min;\n    });\n\n    getWeather('forecast', inputValue, valueUnits).then(data => {\n      data.list.forEach((oneDay, index) => {\n        const { temp_max, temp_min } = oneDay.main;\n        index += 3;\n        index % 2 === 0\n          ? (allDataTemp[index].textContent = temp_max)\n          : (allDataTemp[index].textContent = temp_min);\n      });\n    });\n  } else {\n    getLocal().then(location => {\n      getWeatherStart('weather', location[0], location[1], valueUnits).then(data => {\n        const { temp, temp_max, temp_min } = data.main;\n        allDataTemp[0].textContent = temp;\n        allDataTemp[1].textContent = temp_max;\n        allDataTemp[2].textContent = temp_min;\n      });\n\n      getWeatherStart('forecast', location[0], location[1], valueUnits).then(data => {\n        data.list.forEach((oneDay, index) => {\n          const { temp_max, temp_min } = oneDay.main;\n          index += 3;\n          index % 2 === 0\n            ? (allDataTemp[index].textContent = temp_max)\n            : (allDataTemp[index].textContent = temp_min);\n        });\n      });\n    });\n  }\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getWeather, getWeatherStart } from './js/weather-api';\nimport { renderWeatherNow, renderWeatherSomeDay } from './js/render-functions';\nimport { pulsation } from './js/change-fill';\nimport { getLocal } from './js/local';\nimport { changeUnits } from './js/chande-units';\n\nconst wrapNow = document.querySelector('#now');\nconst wrapSome = document.querySelector('#some');\nconst form = document.querySelector('form');\nconst checkboxUnits = document.querySelector('.units');\nconst checkboxTheme = document.querySelector('.theme');\n\nlet intervalNew,\n  inputValue,\n  valueUnits = 'metric';\n\nconst swiper = new Swiper('.swiper-container', {\n  direction: 'vertical',\n  slidesPerView: 5,\n  spaceBetween: 20,\n  mousewheel: true,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n});\n\ngetLocal().then(location => {\n  getWeatherStart('weather', location[0], location[1]).then(data => {\n    renderWeatherNow(data, wrapNow);\n    intervalNew = setInterval(pulsation, 8000);\n  });\n\n  getWeatherStart('forecast', location[0], location[1])\n    .then(data => {\n      renderWeatherSomeDay(data.list, wrapSome);\n    })\n    .finally(() => {\n      swiper.update();\n    });\n});\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  inputValue = document.querySelector('input').value.trim();\n\n  if (inputValue === '') {\n    return;\n  }\n  Promise.all([\n    getWeather('weather', inputValue, valueUnits).then(data => {\n      renderWeatherNow(data, wrapNow);\n      clearInterval(intervalNew);\n      intervalNew = setInterval(pulsation, 8000);\n    }),\n    getWeather('forecast', inputValue, valueUnits).then(data => {\n      renderWeatherSomeDay(data.list, wrapSome);\n    }),\n  ])\n    .catch(() => {\n      inputValue = null;\n      iziToast.error({\n        message: 'Sorry, no city was found with that name. Please try again!',\n        position: 'topRight',\n        backgroundColor: '#ef4040',\n      });\n    })\n    .finally(() => {\n      swiper.update();\n    });\n});\n\ncheckboxUnits.addEventListener('change', event => {\n  event.target.checked ? (valueUnits = 'imperial') : (valueUnits = 'metric');\n  changeUnits(inputValue, valueUnits);\n});\n\nconst linkDarkMod = document.querySelector('[title=\"style-dark\"]');\n\ncheckboxTheme.addEventListener('change', event => {\n  if (event.target.checked) {\n    linkDarkMod.removeAttribute('disabled');\n  } else {\n    linkDarkMod.setAttribute('disabled', 'true');\n  }\n});\n"],"names":["fill","tempPulsation","pulsation","element","tempChange","change","basePath","renderWeatherNow","allParam","wrap","main","weather","coord","wind","name","renderWeatherSomeDay","oneDay","dt_txt","API_KEY","BASE_URL","getWeatherStart","type","lon","lat","units","searchParams","axios","getWeather","value","getLocal","resolve","position","latitude","longitude","error","changeUnits","inputValue","valueUnits","allDataTemp","data","temp","temp_max","temp_min","index","location","wrapNow","wrapSome","form","checkboxUnits","checkboxTheme","intervalNew","swiper","event","iziToast","linkDarkMod"],"mappings":"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"}